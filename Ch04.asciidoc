== Keys and Addresses

== Introductionn to cryptography on Chia
Private -> Public Key pairing concepts-::
test

== Basics of BLS signatures

== Puzzles, Puzzle Hashes and XCH addresses
Puzzles::

Puzzle Hashes::
A puzzle hash is simply a puzzle run as a solution through sha256tree as the puzzle. This sounds complicated, but is not really and in many ways is the major magic trick that chia blockchain offers to the world over anything else previous. It is worth spending the time to understand what this means and the implications.

You can easily get the puzzle hash for any puzzle by using the command `cdv clsp <something something>` with the output of <puzzlehash> being your new puzzlehash. It is recommended that you drop to a command line and try this. But this shortcut does not give the in-depth understanding we seek in this guide.

Therefore, you can verify the output of the previous simple command manually using chialisp and clvm only. For example, if again the puzzle is `<puzzle>` you can run it as solution through sha256tree as the puzzle and get the same result. `brun '(a (q 2 6 (c 2 (c 5 ()))) (c (q 1 2 (i (l 5) (q 11 (q . 2) (a 6 (c 2 (c 9 ()))) (a 6 (c 2 (c 13 ())))) (q 11 (q . 1) 5)) 1) 1))'  '(<puzzle>)'` with the output of <puzzlehash>. This output should match that of the previously run simple cdv command, but how did that happen?

The brun command can be run with the verbose flag `-v` to see step by step how sha256tree hashes the leaves of the original puzzle working it's way up binary tree to the root until hashing the last two branches and outputting a final puzzle hash that uniquely represents the whole of the original puzzle in a standard compressed 32-byte 64 hexidecimal format preceeded by the "0x". This in a nutshell is the magic of chialisp at work. 

Every puzzlehash you see anywhere in the coin set model, and some you can't see yet due to not being revealled yet, represents potentially infinite complex logic just waiting to be revealled, verified and potentially run outputting various directives to the blockchain. This action potenital defines the state of the chia blockchain at any given time. Hopefully now you can visualize how efficient and secure it is to maintain chia blockchain state compared to other blockchain projects regardless of how powerful and large the action potential of coin set model grows over time.

XCH addresses::
To convert a puzzle hash to an XCH address, which is just a string representation of the same thing, it is a beautifully simple command `cdv encode puzzle_hash`.

== Advanced Concepts
Custody solution using Chia::

"Sniffed Keys" - someone else knows your private key, but you don't know it.

"Stolen? Keys" - someone else knows your private key and you no longer know it.
